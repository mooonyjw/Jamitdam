import SwiftUI
import Combine

// DayPlus NavigationÏóêÏÑú ÌïÑÏöîÌï¥ÏÑú ÏàòÏ†ï
struct Relationship: Identifiable, Hashable, Equatable {
    let id: UUID = UUID()
    var nickname: String
    var hashtags: String
    var icon: String
    let startDate: Date
    let userId: UUID
}

// Ïú†ÏàòÌòÑ Ïù∏Ïó∞ÏùÑ Í∏∞Ï§ÄÏúºÎ°ú ÎçîÎØ∏Îç∞Ïù¥ÌÑ∞ ÏûëÏÑ±
var tiger = Relationship(nickname: "Ìò∏Îû≠Ïù¥", hashtags: "ÎèôÏïÑÎ¶¨ÏÑ†Î∞∞", icon: "üêØ", startDate: Date() - 86400 * 30 * 12, userId: user1.id)
var podong = Relationship(nickname: "Ìè¨ÎèôÏù¥", hashtags: "ÎØ∏ÌåÖ", icon: "üêª‚Äç‚ùÑÔ∏è", startDate: Date() - 86400 * 30 * 3, userId: user1.id)
var gamer = Relationship(nickname: "Í≤åÏûÑÏ§ëÎèÖÏûê", hashtags: "Ï†ÑÏç∏ÎÇ®", icon: "üßëüèª‚Äçüíª", startDate: Date() - 86400 * 30 * 5, userId: user1.id)
var baeksook = Relationship(nickname: "Îä•Ïù¥Î∞±Ïàô", hashtags: "ÏπòÍ∑ºÎçï", icon: "üï∂Ô∏è", startDate: Date() - 86400 * 30, userId: user1.id)
var son = Relationship(nickname: "SON", hashtags: "Í≥ºCC", icon: "‚öΩÔ∏è", startDate: Date() - 86400 * 30 * 24, userId: user1.id)
var airpod = Relationship(nickname: "ÏóêÏñ¥Ìåü", hashtags: "Ïç∏ÎÇ®", icon: "üéß", startDate: Date() - 86400, userId: user1.id)

var relationships: [Relationship] = [tiger, podong, gamer, baeksook, son]

func getRelationships() -> [Relationship] {
    return relationships
}

func addRelationship(relationship: Relationship) {
    relationships.append(relationship)
}

class RelationshipStore: ObservableObject {
    @Published var relationships: [Relationship]
    init() {
        // Ï¥àÍ∏∞ ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞Î°ú relationshipsÎ•º Ï¥àÍ∏∞Ìôî
        self.relationships = [tiger, podong, gamer, baeksook, son]
    }
    
    func addRelationship(_ relationship: Relationship) {
        relationships.append(relationship)
    }
    
    func deleteRelationship(_ relationship: Relationship) {
        relationships.removeAll { $0.id == relationship.id }
    }
}


